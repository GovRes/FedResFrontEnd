import { generateClient } from "aws-amplify/api";
import { fetchAuthSession } from "aws-amplify/auth";

export const createAndSaveUserResume = async ({
  jobId,
  userId,
}: {
  jobId: string;
  userId: string;
}) => {
  try {
    const session = await fetchAuthSession();
    if (!session.tokens) {
      throw new Error("No valid authentication session found");
    }
  } catch (error) {
    console.error("No user is signed in");
    // Redirect to login page
    return;
  }
  const client = generateClient();
  try {
    // Validate required parameters
    if (!jobId || !userId) {
      throw new Error("jobId and userId are required parameters");
    }

    // Create the UserResume input object
    const userResumeInput = {
      jobId,
      userId,
      // Note: The ID will be auto-generated by Amplify
    };

    // Use the client.models approach in Amplify v2
    const response = await client.graphql({
      query: `
        mutation CreateUserResume($input: CreateUserResumeInput!) {
          createUserResume(input: $input) {
            id
            jobId
            userId
            createdAt
            updatedAt
          }
        }
      `,
      variables: {
        input: userResumeInput,
      },
      authMode: "userPool",
    });

    // Return the created UserResume
    if ("data" in response) {
      return response.data.createUserResume;
    }
    throw new Error("Unexpected response format from GraphQL operation");
  } catch (error) {
    console.error("Error creating UserResume:", error);
    throw error;
  }
};
